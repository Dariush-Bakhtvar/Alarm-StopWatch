@mixin flex($justify, $aling) {
    display: flex;
    justify-content: $justify;
    align-items: $aling;
}

%flex-use {
    @include flex(space-around, center);
}

%unic {
    position: absolute;
    border-radius: 2px;
    top: 50%;
    left: 50%;
    transform-origin: 50% 0;
    transform: translate(50%, 0) rotate(90deg);
}

%roundedBtn {
    cursor: pointer;
    width: 35px;
    height: 35px;
    font-size: 1.7rem;
    border-radius: 50%;
    box-shadow: 7px 7px 15px #c0c8cf, -7px -7px 15px #ffffff;
    text-align: center;
    line-height: 35px;
}

%width_hieght {
    width: 100%;
    height: 100%;
}

%arrow-btn {
    display: block;
    width: 32px;
    height: 32px;
    font-size: 2.7rem;
    text-align: center;
    position: absolute;
    left: 40%;
    &.Up {
        top: 0;
    }
    &.Down {
        bottom: 0;
    }
}

%flex_space_around_align_center {
    display: flex;
    justify-content: space-around;
    align-items: center;
}

%flex_alignCenter {
    display: flex;
    align-items: center;
}

$pi: 3.14159265359;
$_precision: 10;
@function pow($base, $exp) {
    $value: $base;
    @if $exp>1 {
        @for $i from 2 through $exp {
            $value: $value * $base;
        }
    }
    @if $exp < 1 {
        @for $i from 0 through -$exp {
            $value: $value / $base;
        }
    }
    @return $value;
}

@function fact($num) {
    $fact: 1;
    @if $num>0 {
        @for $i from 1 through $num {
            $fact: $fact * $i;
        }
    }
    @return $fact;
}

@function _to_unitless_rad($angle) {
    @if unit($angle)=="deg" {
        $angle: $angle / 180deg * $pi;
    }
    @if unit($angle)=="rad" {
        $angle: $angle / 1rad;
    }
    @return $angle;
}

@function sin($angle) {
    $a: _to_unitless_rad($angle);
    $sin: $a;
    @for $n from 1 through $_precision {
        $sin: $sin + (pow(-1, $n) / fact(2 * $n + 1)) * pow($a, (2 * $n + 1));
    }
    @return $sin;
}

@function cos($angle) {
    $a: _to_unitless_rad($angle);
    $cos: 1;
    @for $n from 1 through $_precision {
        $cos: $cos + (pow(-1, $n) / fact(2 * $n)) * pow($a, 2 * $n);
    }
    @return $cos;
}

@function tan($angle) {
    @return sin($angle) / cos($angle);
}